#!/bin/sh
# This script is does not due feature detection in the usual sense. In fact it
# must be run after the normal Meson feature detection and the config_ast.h
# header has been created.
#
# This script creates dynamically generated source files. Which can involve
# detecting whether the platform supports specific symbols (e.g.,
# ABI_AIO_XFER_MAX) but that is secondary.
#
set -e
set -x
bin_dir="$MESON_SOURCE_ROOT/bin"
comp_dir="$MESON_SOURCE_ROOT/src/lib/libast/comp"
PATH=$bin_dir:$PATH
INC_DIRS=""
INC_DIRS="$INC_DIRS -I$MESON_BUILD_ROOT"
INC_DIRS="$INC_DIRS -I$MESON_SOURCE_ROOT/src/lib/libast/include"
INC_DIRS="$INC_DIRS -I$MESON_SOURCE_ROOT/src/lib/libast/features"
INC_DIRS="$INC_DIRS -I$MESON_SOURCE_ROOT/src/cmd/std"

cd "$MESON_SOURCE_ROOT/src/lib/libast/features"
test -d FEATURE || mkdir FEATURE
./siglist.sh > FEATURE/siglist || exit

"$comp_dir/conf.sh" cc -std=gnu99 -D_BLD_DLL -D_BLD_ast $INC_DIRS || exit

for name in sfinit signal; do
    echo "/* This file is autogenerated by libast_prereq.sh script */" > FEATURE/$name
    echo "#ifndef _def_${name}_features" >> FEATURE/$name
    echo "#define _def_${name}_features    1" >> FEATURE/$name
    cc -D_BLD_DLL -D_BLD_ast $INC_DIRS -std=gnu99 -o $name $name.c
    ./$name >> FEATURE/$name
    echo "#endif" >> FEATURE/$name
    rm -f $name
done
