sudo: required
env:
    matrix:
        - OS_TYPE=fedora
          INSTALL_REQUIREMENTS="dnf repolist; dnf install -y meson sudo procps-ng libX11-devel fuse-devel gdbm-devel langpacks-zh_CN; dnf groupinstall -y 'C Development Tools and Libraries'"
          MESON_TEST="meson test"

        - OS_TYPE=opensuse
          INSTALL_REQUIREMENTS="zypper refresh; zypper in -y meson sudo glibc-locale bind-utils bison flex gdbm-devel glibc-devel groff ncurses-devel procps psmisc pwdutils zlib-devel bind-libs libbz2-devel update-alternatives awk gcc libX11-devel"
          MESON_TEST="mesontest"

services:
    - docker

before_install:
    - docker pull ${OS_TYPE}

script:
    # TODO: Check how to set MESON_TESTTHREADS dynamically
    - echo > build.sh "set -e;
        export CFLAGS='-fno-strict-aliasing -Wno-unknown-pragmas -Wno-missing-braces -Wno-unused-result -Wno-return-type -Wno-int-to-pointer-cast -Wno-parentheses -Wno-unused -Wno-unused-but-set-variable -Wno-cpp -Wno-char-subscripts';
        cd /source;
        mkdir build;
        cd build;
        echo ==== Configuring the build;
        meson ..;
        echo ==== Building the code;
        ninja;
        echo ==== Running unit tests;
        ulimit -n 1024;
        export MESON_TESTTHREADS=16;
        if ! ${MESON_TEST}; then cat meson-logs/testlog.txt; exit 1; fi;
        "

    - chmod a+x build.sh

    - docker run -v $TRAVIS_BUILD_DIR:/source ${OS_TYPE} bash -c "set -e;
        ${INSTALL_REQUIREMENTS};
        useradd test;
        chown -R test /source;
        sudo -u test /source/build.sh"
